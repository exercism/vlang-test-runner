{
  "version": 1,
  "status": "error",
  "message": "---- Testing... ----------------------------------------------------------------\n--------------------------------------------------------------------------------\nrun_test.v:4:10: error: unknown function: is_leap_year\n    2 | \n    3 | fn test_not_divisible_by_4() {\n    4 |     assert !is_leap_year(2015)\n      |             ~~~~~~~~~~~~~~~~~~\n    5 | }\n    6 |\nrun_test.v:8:10: error: unknown function: is_leap_year\n    6 | \n    7 | fn test_divisible_by_2_not_by_4() {\n    8 |     assert !is_leap_year(1970)\n      |             ~~~~~~~~~~~~~~~~~~\n    9 | }\n   10 |\nrun_test.v:12:9: error: unknown function: is_leap_year\n   10 | \n   11 | fn test_divisible_by_4_not_by_100() {\n   12 |     assert is_leap_year(1996)\n      |            ~~~~~~~~~~~~~~~~~~\n   13 | }\n   14 |\nrun_test.v:16:9: error: unknown function: is_leap_year\n   14 | \n   15 | fn test_divisible_by_4_and_5() {\n   16 |     assert is_leap_year(1960)\n      |            ~~~~~~~~~~~~~~~~~~\n   17 | }\n   18 |\nrun_test.v:20:10: error: unknown function: is_leap_year\n   18 | \n   19 | fn test_divisible_by_100_not_by_400(){\n   20 |     assert !is_leap_year(2100)\n      |             ~~~~~~~~~~~~~~~~~~\n   21 | }\n   22 |\nrun_test.v:24:10: error: unknown function: is_leap_year\n   22 | \n   23 | fn test_divisible_by_100_not_by_3() {\n   24 |     assert !is_leap_year(1900)\n      |             ~~~~~~~~~~~~~~~~~~\n   25 | }\n   26 |\nrun_test.v:28:9: error: unknown function: is_leap_year\n   26 | \n   27 | fn test_divisible_by_400() {\n   28 |     assert is_leap_year(2000)\n      |            ~~~~~~~~~~~~~~~~~~\n   29 | }\n   30 |\nrun_test.v:32:9: error: unknown function: is_leap_year\n   30 | \n   31 | fn test_divisible_by_100_not_by_125() {\n   32 |     assert is_leap_year(2400)\n      |            ~~~~~~~~~~~~~~~~~~\n   33 | }\n   34 |\nrun_test.v:36:10: error: unknown function: is_leap_year\n   34 | \n   35 | fn test_divisible_by_200_not_by_400() {\n   36 |     assert !is_leap_year(1800)\n      |             ~~~~~~~~~~~~~~~~~~\n   37 | }\nchecker summary: 9 V errors, 0 V warnings, 0 V notices\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\nIf the code of your project is in multiple files, try with `v /opt/test-runner/tests/example-empty-file` instead of `v /opt/test-runner/tests/example-empty-file/run_test.v`\n\nCannot compile file /opt/test-runner/tests/example-empty-file/run_test.v\n--------------------------------------------------------------------------------\nFailed command 1:    '/opt/vlang/v' -stats  -o '/tmp/tsession/run_test' '/opt/test-runner/tests/example-empty-file/run_test.v'\nSummary for all V _test.v files: 1 failed, 1 total."
}
